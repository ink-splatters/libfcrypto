version: ~> 1.0
language: c
arch: amd64
os: linux
dist: bionic
env:
  global:
   # Encrypted COVERITY_SCAN_TOKEN
   - secure: "209iKAtnnXzl0nXcdw4q9sblvaxCU+De8+XCf9akz4AdVk86mIgJyp/csPymrsSzo090qOFnswnyImSJHEC1alVnG92WAahAY/WUXZXBlYQU7x4DHy1rBVD7LYp+ZSUKX7bj45pPIjWsj8Hrn/DpJHGAkdQgHt5EQC4k3S1/f2OjcL5QeZPcBjQYe8Wkh7ZBp2wBC+TILWG/GJd97vaesMuKZ9ydlQAdaGD9NhV0lD0mWg5iQ/cTRwXRQaNPlkY5GASYu/3DEaQXRMpmB2YNjqJTx8dj7D2GAn01MmI86x7gF4HEhT0VsCpqFikAmXZ1jI/+ypjwxL2MRmH73LAaZQ+Y4NqdWcafv2qrUiXDUlUlP0/vt68QiIhYw75pKg6j+Fqk5QBI6M/koLru/3EMNNvBd6aoW77jS8k9cZYIvCHNOQv1vcyhAF4xzwOJtSjvwFRDEVvC1JA+VcAZ5uZX987qnUNGNElEXveFtBjgYYgS5XdWxATXqcEQd0r9SSXMrCRxxLANoCo4ln3tzAV47N0LjAyc3tyzmTbeaDa6dD/g5gZSUa6tNDW29quCXdH0hzyL+MZPi+58xlKXKVTgRP2wZi8gBd6wy4+++UDYrmwS2lD/6yqVUH+BrwdIrjTS4I6bX0vhIJtJR+E51N469OsDB8hj1Wd0QMJXe1CEZbk="
jobs:
  include:
  - name: "Coverity"
    env:
    - CONFIGURE_OPTIONS=""
    - TARGET="coverity"
    compiler: clang
    group: edge
    addons:
      coverity_scan:
        project:
          name: "libyal/libfcrypto"
          description: "Build submitted via Travis CI"
        notification_email: joachim.metz@gmail.com
        build_command_prepend: "./synclibs.sh && ./autogen.sh && ./configure"
        build_command: "make -j4"
        branch_pattern: master
  - name: "Linux with clang"
    env:
    - CONFIGURE_OPTIONS=""
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="linux-clang"
    compiler: clang
    group: edge
  - name: "Linux with gcc"
    env:
    - CONFIGURE_OPTIONS=""
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="linux-gcc"
    compiler: gcc
    group: edge
  - name: "Linux with gcc on ppc64le"
    env:
    - CONFIGURE_OPTIONS=""
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="linux-gcc"
    arch: ppc64le
    compiler: gcc
    group: edge
  - name: "Linux with gcc on s390x"
    env:
    - CONFIGURE_OPTIONS=""
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="linux-gcc"
    arch: s390x
    compiler: gcc
    group: edge
  - name: "Linux with gcc without optimization"
    env:
    - CONFIGURE_OPTIONS="--enable-shared=no"
    - CFLAGS="--coverage -O0"
    - CPPFLAGS="-DOPTIMIZATION_DISABLED"
    - LDFLAGS="--coverage"
    - TARGET="linux-gcc-no-optimization"
    compiler: gcc
    group: edge
  - name: "Linux with gcc and shared libraries"
    env:
    - CONFIGURE_OPTIONS=""
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="linux-gcc-shared"
    compiler: gcc
    group: edge
  - name: "Mac OS 10.14 with clang"
    env:
    - CONFIGURE_OPTIONS=""
    - TARGET="macos-clang"
    compiler: clang
    os: osx
    osx_image: xcode11
  - name: "Mac OS 10.14 with gcc"
    env:
    - CONFIGURE_OPTIONS=""
    - TARGET="macos-gcc"
    compiler: gcc
    os: osx
    osx_image: xcode11
  - name: "Mac OS 10.14 with gcc and pkgbuild"
    env:
    - CONFIGURE_OPTIONS="--disable-dependency-tracking --prefix=/usr/local"
    - TARGET="macos-gcc-pkgbuild"
    compiler: gcc
    os: osx
    osx_image: xcode11
before_install:
- .travis/before_install.sh
install:
- .travis/install.sh
script:
- .travis/script.sh
after_success:
- if test ${TARGET} = "linux-gcc-no-optimization"; then
    for DIRECTORY in `find . -maxdepth 1 -type d`; do (cd ${DIRECTORY} && find . -maxdepth 1 -name \*.gcno -type f -exec gcov -pb {} \;) done;
    curl -o codecov.sh -s https://codecov.io/bash && /bin/bash ./codecov.sh -n ${TARGET} -X gcov;
  fi
